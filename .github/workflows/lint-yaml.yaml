name: lint-yaml

on:
  pull_request:
    paths:
      - '*.yaml'

jobs:
  lint:
    name: Check YAML Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
          working-directory: ./scripts

      - name: Check YAML normalization
        id: check_yaml
        run: |
          set -e

          # Run the normalization script
          cd scripts
          bundle exec unitsdb-utils normalize --all --dir ..
          cd ..

          # Check if there are any changes
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "::warning::YAML files are not properly normalized"
            echo "issues_found=true" >> $GITHUB_OUTPUT

            # Get list of modified files
            MODIFIED_FILES=$(git status --porcelain | grep '^ M' | awk '{print $2}' | grep '\.yaml$')

            # Create issue details
            ISSUE_DETAILS=""
            for file in $MODIFIED_FILES; do
              echo "::warning file=$file::YAML file is not properly normalized"
              ISSUE_DETAILS+="- $file is not properly normalized\n"
              # Show diff for debugging
              git diff $file
            done

            echo "issue_details<<EOF" >> $GITHUB_OUTPUT
            echo -e "$ISSUE_DETAILS" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT

            # Reset changes to avoid affecting other steps
            git reset --hard

            exit 1
          else
            echo "All YAML files are properly normalized!"
          fi

      - name: Check field uniqueness
        id: check_uniqueness
        run: |
          set -e
          cd scripts

          # Run the uniqueness check script and capture output
          UNIQUENESS_OUTPUT=$(bundle exec unitsdb-utils check_uniqueness --all --dir ..)

          # Check if any duplicates were found
          if echo "$UNIQUENESS_OUTPUT" | grep -q "Found duplicate"; then
            echo "::warning::YAML files contain duplicate fields"
            echo "uniqueness_issues_found=true" >> $GITHUB_OUTPUT

            # Format the output for the GitHub comment
            UNIQUENESS_DETAILS="$(echo "$UNIQUENESS_OUTPUT" | grep -A 100 "Found duplicate")"

            echo "uniqueness_details<<EOF" >> $GITHUB_OUTPUT
            echo "$UNIQUENESS_DETAILS" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT

            exit 1
          else
            echo "All fields have unique identifiers!"
          fi

      - name: Comment on Normalization Issues
        if: failure() && steps.check_yaml.outputs.issues_found == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## YAML Normalization Required

            The following YAML files need to be normalized:
            ${{ steps.check_yaml.outputs.issue_details }}

            Please run the normalization script before submitting your PR:

            ```bash
            cd scripts
            bundle install
            bundle exec unitsdb-utils normalize --all --dir ..
            ```

            See the [contribution guidelines](../blob/main/README.adoc#contributing) for more information.
          reactions: 'eyes,-1'

      - name: Comment on Uniqueness Issues
        if: failure() && steps.check_uniqueness.outputs.uniqueness_issues_found == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## Duplicate Fields Found

            The YAML files contain duplicate field identifiers:

            ```
            ${{ steps.check_uniqueness.outputs.uniqueness_details }}
            ```

            Please ensure all 'short' and 'id' fields are unique within each object type.
            You can check for duplicates by running:

            ```bash
            cd scripts
            bundle install
            bundle exec unitsdb-utils check_uniqueness --all --dir ..
            ```

            See the [contribution guidelines](../blob/main/README.adoc#contributing) for more information.
          reactions: 'eyes,-1'
